import pandas as pd

# Load data from a CSV file (replace 'employee_data.csv' with the actual filename or path)
df = pd.read_csv('employee_data.csv')

# Display the first few rows of the dataframe to understand its structure
print(df.head())

# Basic data cleaning: Remove any leading/trailing whitespace from column names
df.columns = df.columns.str.strip()

# Convert 'Annual Salary' and 'Bonus %' columns to numerical values after removing any special characters
df['Annual Salary'] = df['Annual Salary'].replace('[\$,]', '', regex=True).astype(float)
df['Bonus %'] = df['Bonus %'].replace('%', '', regex=True).astype(float)

# Convert 'Hire Date' to a datetime format to handle date-based calculations
df['Hire Date'] = pd.to_datetime(df['Hire Date'], errors='coerce')

# Example analysis 1: Calculate average salary by department
avg_salary_by_dept = df.groupby('Department')['Annual Salary'].mean()
print("Average Salary by Department:\n", avg_salary_by_dept)

# Example analysis 2: Filter employees hired after 2010 with a bonus > 10%
recent_high_bonus = df[(df['Hire Date'] > '2010-01-01') & (df['Bonus %'] > 10)]
print("Employees hired after 2010 with a bonus > 10%:\n", recent_high_bonus)

# Example analysis 3: Count employees by job title
job_title_counts = df['Job Title'].value_counts()
print("Number of employees by job title:\n", job_title_counts)

# Example analysis 4: Filter and display employees from a specific city, e.g., Phoenix
phoenix_employees = df[df['City'] == 'Phoenix']
print("Employees based in Phoenix:\n", phoenix_employees)

# Example analysis 5: Calculate average age by gender
avg_age_by_gender = df.groupby('Gender')['Age'].mean()
print("Average Age by Gender:\n", avg_age_by_gender)

# Example analysis 6: Top 5 highest-paid employees
top_5_highest_paid = df.nlargest(5, 'Annual Salary')
print("Top 5 highest-paid employees:\n", top_5_highest_paid)
_________________________________________________________________________________________
SAMPLE INPUT:
a) Var v_nameCollection = ‘Hash_<Your Name>’
      b) Var v_phoneCollection =’Hash_<Your Phone last four digits’
      c) createCollection(v_nameCollection)
      d) createCollection(v_phoneCollection)
      e) getEmpCount(v_nameCollection)
      f) indexData(v_nameCollection,’Department’)
      g) indexData(v_ phoneCollection, ‘Gender’)
      h) getEmpCount(v_nameCollection)
      i) delEmpById (v_ nameCollection ,‘E02003’)
      j) getEmpCount(v_nameCollection)
      k) searchByColumn(v_nameCollection,’Department’,’IT’)
      l) searchByColumn(v_nameCollection,’Gender’ ,’Male’)
      m) searchByColumn(v_ phoneCollection,’Department’,’IT’)
      n) getDepFacet(v_ nameCollection)
      o) getDepFacet(v_ phoneCollection)
SAMPLE OUTPUT:

v_nameCollection = 'Hash_JohnDoe';         // Replace <Your Name> with "JohnDoe"
v_phoneCollection = 'Hash_1234';           // Replace with the last four digits of your phone

v_nameCollection = 'Hash_JohnDoe';         // Replace <Your Name> with "JohnDoe"
v_phoneCollection = 'Hash_1234';           // Replace with the last four digits of your phone

getEmpCount(v_nameCollection);   // Output: 5

indexData(v_nameCollection, 'Department');

indexData(v_phoneCollection, 'Gender');

getEmpCount(v_nameCollection);   // Output: 5

delEmpById(v_nameCollection, 'E02003');

getEmpCount(v_nameCollection);   // Output: 4

searchByColumn(v_nameCollection, 'Department', 'IT');
// Output: 
// [
//   { EmployeeID: "E02001", Name: "Alice", Department: "IT", Gender: "Female" },
//   { EmployeeID: "E02005", Name: "Eve", Department: "IT", Gender: "Female" }
// ]

searchByColumn(v_nameCollection, 'Gender', 'Male');
// Output: 
// [
//   { EmployeeID: "E02002", Name: "Bob", Department: "HR", Gender: "Male" }
// ]

searchByColumn(v_phoneCollection, 'Department', 'IT');
// Output: []

getDepFacet(v_nameCollection);
// Output:
// [
//   { Department: "IT", Count: 2 },
//   { Department: "HR", Count: 1 },
//   { Department: "Finance", Count: 1 }
// ]

getDepFacet(v_phoneCollection);
// Output: []








